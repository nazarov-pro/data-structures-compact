plugins {
    id 'java'
    id 'checkstyle'
}

group 'org.shahin.nazarov'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile project(":microservices:http-server")
    compileOnly 'org.projectlombok:lombok:1.16.20'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}


checkstyle {

    project.ext.checkstyleVersion = '8.17'
    project.ext.sevntuChecksVersion = '1.32.0'

    repositories {
        mavenCentral()
        // we keep artifacts in maven central too, but this is just example of usage from our old maven repo on github
        maven {
            url "http://sevntu-checkstyle.github.com/sevntu.checkstyle/maven2"
        }
    }

    ignoreFailures = false
    configFile = file("${project.rootDir}/checkstyle.xml")

    //sourceSets = [sourceSets.main]
    //showViolations = true
    reportsDir = file("$project.buildDir/checkstyleReports")
    configProperties = ['baseDir': "$project.projectDir"]

    //https://discuss.gradle.org/t/some-checkstyle-rules-dont-work-in-gradle/16102/4
    checkstyleMain {
        source = sourceSets.main.allSource
    }

    configurations {
        checkstyle
    }

    dependencies{
        assert project.hasProperty("checkstyleVersion")

        checkstyle "com.puppycrawl.tools:checkstyle:${checkstyleVersion}"
        checkstyle "com.github.sevntu-checkstyle:sevntu-checks:${sevntuChecksVersion}"
    }
}


def props = new Properties()
file("src/main/resources/server.properties").withInputStream { props.load(it) }
def id = props.getProperty('server.id', 'myServer')

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'org.shahin.nazarov.FirstServer'
    }
    baseName = id
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    
    doLast {
        copy {
            from (project.libsDir.path + File.separator + id + ".jar")
            into "C:\\Users\\s0552\\projects\\project_best\\training\\servers-manager\\libs"
        }
    }
}